import roll_it_back as chall
from gmpy2 import popcount

T = chall.t(chall.x(b"jctf{not_the_flag}", b"*-*")) | 1

# from challange code
l = 420
flag = 2535320453775772016257932121117911974157173123778528757795027065121941155726429313911545470529920091870489045401698656195217643

def newbit(flag, T):
	return (popcount(flag & T) & 1)

for _ in range(421337):
	popbit = flag >> (l-1)
	assert popbit in [0, 1]
	poss = []
	flag_prev_part = (flag & (2**(l-1))-1) << 1
	for lastbit in [0, 1]:
		if newbit(flag_prev_part + lastbit, T) == popbit:
			poss += [lastbit]
	if len(poss) == 0:
		print("ERROR no option found")
		break
	elif len(poss) == 2:
		print("Uncertain, two options")
	flag = (flag_prev_part + poss[0])

print(flag)
print("".join(map(chr, int.to_bytes(flag, 500, 'little'))))
